library(keras)
install.packages("keras")
install.packages("EBImage")
library(neuralnet)
library(NeuralNetTools)
install.packages("NeuralNetTools")
library(NeuralNetTools)
library(neuralnet)
library(neuralnet)
library(NeuralNetTools)
qualities <- matrix (c(1, 1, 1, 0, 0, 0,
0, 1, 0, 1, 1, 0,
1, 0, 0, 1, 0, 1), byrow = TRUE, nrow = 3)
colnames(qualities) <- c("big_ears", "big_eyes", "big_teeth", "kindly", "wrinkled", "handsome")
rownames(qualities) <- c("wolf", "grannie", "woodcutter")
qualities
actions <- matrix (c(1, 1, 1, 0, 0, 0, 0,
0, 0, 0, 1, 1, 1, 0,
0, 0, 0, 1, 0, 1, 1), byrow = TRUE, nrow = 3)
colnames(actions) <- c("run_away", "scream", "look_for_woodcutter", "kiss_on_cheek", "approach", "offer_food", "flirt_with")
rownames(actions) <- rownames(qualities)
actions
data <- cbind(qualities, actions)
set.seed(123) # for reproducibility
neuralnetwork <- neuralnet(run_away + scream+look_for_woodcutter + kiss_on_cheek + approach +
offer_food + flirt_with ~
big_ears + big_eyes + big_teeth + kindly + wrinkled + handsome,
data = data, hidden = 3, exclude = c(1, 8, 15, 22, 26, 30, 34, 38, 42, 46),
lifesign = "minimal", linear.output = FALSE)
# plot the NN
par_bkp <- par(mar = c(0, 0, 0, 0)) # set different margin to minimize cutoff text
plotnet(neuralnetwork, bias = FALSE)
set.seed(500)
library(MASS)
data <- Boston
apply(data,2,function(x) sum(is.na(x)))
index <- sample(1:nrow(data),round(0.75*nrow(data)))
train <- data[index,]
test <- data[-index,]
lm.fit <- glm(medv~., data=train)
summary(lm.fit)
pr.lm <- predict(lm.fit,test)
MSE.lm <- sum((pr.lm - test$medv)^2)/nrow(test)
maxs <- apply(data, 2, max)
mins <- apply(data, 2, min)
scaled <- as.data.frame(scale(data, center = mins, scale = maxs - mins))
train_ <- scaled[index,]
test_ <- scaled[-index,]
library(neuralnet)
n <- names(train_)
f <- as.formula(paste("medv ~", paste(n[!n %in% "medv"], collapse = " + ")))
nn <- neuralnet(f,data=train_,hidden=c(5,3),linear.output=T)
plot(nn)
pr.nn <- compute(nn,test_[,1:13])
pr.nn_ <- pr.nn$net.result*(max(data$medv)-min(data$medv))+min(data$medv)
test.r <- (test_$medv)*(max(data$medv)-min(data$medv))+min(data$medv)
MSE.nn <- sum((test.r - pr.nn_)^2)/nrow(test_)
print(paste(MSE.lm,MSE.nn))
par(mfrow=c(1,2))
plot(test$medv,pr.nn_,col='red',main='Real vs predicted NN',pch=18,cex=0.7)
abline(0,1,lwd=2)
legend('bottomright',legend='NN',pch=18,col='red', bty='n')
plot(test$medv,pr.lm,col='blue',main='Real vs predicted lm',pch=18, cex=0.7)
abline(0,1,lwd=2)
legend('bottomright',legend='LM',pch=18,col='blue', bty='n', cex=.95)
plot(test$medv,pr.nn_,col='red',main='Real vs predicted NN',pch=18,cex=0.7)
points(test$medv,pr.lm,col='blue',pch=18,cex=0.7)
abline(0,1,lwd=2)
legend('bottomright',legend=c('NN','LM'),pch=18,col=c('red','blue'))
Cualidades<-matrix(c(1, 1, 1, 0, 0, 0,
0, 1, 0, 1, 1, 0,
1, 0, 0, 1, 0, 1), byrow = TRUE, nrow = 3)
colnames(Cualidades) <- c("orejas_grandes", "ojos_grandes", "dientes_grandes", "amable", "arrugada", "guapo")
rownames(Cualidades) <- c("Lobo", "Abuelita", "Leñador")
Cualidades
plot(nn)
Acciones<-matrix(c(1, 1, 1, 0, 0, 0, 0,
0, 0, 0, 1, 1, 1, 0,
0, 0, 0, 1, 0, 1, 1), byrow = TRUE, nrow = 3)
colnames(Acciones) <- c("run_away", "scream", "look_for_woodcutter", "kiss_on_cheek", "approach", "offer_food", "flirt_with")
rownames(Acciones) <- rownames(Cualidades)
Acciones
colnames(Acciones) <- c("huir", "gritar", "buscar_leñador", "beso_mejilla", "acercarse", "ofrecer_comida", "coquetear")
rownames(Acciones) <- rownames(Cualidades)
Acciones
Datos<- cbind(Cualidades, Acciones)
# Entrenar la red neuronal (NN)
set.seed(123) # Establecer semilla (para la reproducibilidad)
neuralnetwork<-neuralnet(huir + gritar + buscar_leñador + beso_mejilla + acercarse +
ofrecer_comida + coquetear ~
orejas_grandes + ojos_grandes + dientes_grandes + amable + arrugada + guapo,
data = Datos, hidden = 3, exclude = c(1, 8, 15, 22, 26, 30, 34, 38, 42, 46),
lifesign = "minimal", linear.output = FALSE)
# Graficar la red neuronal
par_bkp <- par(mar = c(0, 0, 0, 0)) # set different margin to minimize cutoff text
plotnet(neuralnetwork, bias = FALSE)
library(neuralnet)
library(NeuralNetTools)
Cualidades<-matrix(c(1, 1, 1, 0, 0, 0,
0, 1, 0, 1, 1, 0,
1, 0, 0, 1, 0, 1), byrow = TRUE, nrow = 3)
colnames(Cualidades) <- c("orejas_grandes", "ojos_grandes", "dientes_grandes", "amable", "arrugada", "guapo")
rownames(Cualidades) <- c("Lobo", "Abuelita", "Leñador")
Cualidades
Acciones<-matrix(c(1, 1, 1, 0, 0, 0, 0,
0, 0, 0, 1, 1, 1, 0,
0, 0, 0, 1, 0, 1, 1), byrow = TRUE, nrow = 3)
colnames(Acciones) <- c("huir", "gritar", "buscar_leñador", "beso_mejilla", "acercarse", "ofrecer_comida", "coquetear")
rownames(Acciones) <- rownames(Cualidades)
Acciones
Datos<- cbind(Cualidades, Acciones)
# Entrenar la red neuronal (NN)
set.seed(123) # Establecer semilla (para la reproducibilidad)
neuralnetwork<-neuralnet(huir + gritar + buscar_leñador + beso_mejilla + acercarse +
ofrecer_comida + coquetear ~
orejas_grandes + ojos_grandes + dientes_grandes + amable + arrugada + guapo,
data = Datos, hidden = 3, exclude = c(1, 8, 15, 22, 26, 30, 34, 38, 42, 46),
lifesign = "minimal", linear.output = FALSE)
par_bkp <- par(mar = c(0, 0, 0, 0)) # set different margin to minimize cutoff text
plotnet(neuralnetwork, bias = FALSE)
